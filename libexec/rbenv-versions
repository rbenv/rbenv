#!/usr/bin/env bash
# Summary: List all Ruby versions available to rbenv
# Usage: rbenv versions [--bare] [--skip-aliases]
#
# Lists all Ruby versions found in `$RBENV_ROOT/versions/*'.

set -e
[ -n "$RBENV_DEBUG" ] && set -x

unset bare
unset skip_aliases
unset display_aliases
for arg; do
  case "$arg" in
  --bare ) bare=1 ;;
  --skip-aliases ) skip_aliases=1 ;;
  * )
    rbenv-help --usage versions >&2
    exit 1
    ;;
  esac
done

versions_dir="$RBENV_ROOT"/versions

if enable -f "${0%/*}"/../libexec/rbenv-realpath.dylib realpath 2>/dev/null; then
  display_aliases=1
  [ ! -d "$versions_dir" ] || versions_dir="$(realpath "$versions_dir")"
else
  if [ -n "$RBENV_NATIVE_EXT" ]; then
    echo "rbenv: failed to load \`realpath' builtin" >&2
    exit 1
  fi
  unset skip_aliases
fi

if [ -n "$bare" ]; then
  hit_prefix=""
  miss_prefix=""
  current_version=""
  include_system=""
else
  hit_prefix="* "
  miss_prefix="  "
  current_version="$(rbenv-version-name || true)"
  include_system="1"
fi

if [ -t 1 ]; then
  green=$'\e'"[32m"
  yellow=$'\e'"[33m"
  purple=$'\e'"[35m"
  reset=$'\e'"[0m"
else
  green=""
  yellow=""
  purple=""
  reset=""
fi

num_versions=0

print_version() {
  if [ "$1" == "$current_version" ]; then
    echo "${hit_prefix}${green}$(rbenv-version 2>/dev/null)${reset}"
  else
    echo "${miss_prefix}${1}${2}"
  fi
  num_versions=$((num_versions + 1))
}

# Include "system" in the non-bare output, if it exists
if [ -n "$include_system" ] && RBENV_VERSION=system rbenv-which ruby >/dev/null 2>&1; then
  print_version system
fi

shopt -s nullglob
for path in "${versions_dir}/"*; do
  if [ -d "$path" ]; then
    alias=""
    if [ -n "$display_aliases" ] && [ -L "$path" ]; then
      target="$(realpath "$path")"
      if [ "${target%/*}" = "$versions_dir" ]; then
        [ -z "$skip_aliases" ] || continue
        [ -n "$bare" ] || alias=" ${yellow}-> ${purple}${target##*/}${reset}"
      fi
    fi
    print_version "${path##*/}" "$alias"
  fi
done
shopt -u nullglob

if [ "$num_versions" -eq 0 ] && [ -n "$include_system" ]; then
  echo "Warning: no Ruby detected on the system" >&2
  exit 1
fi
