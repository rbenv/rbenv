#!/usr/bin/env bash
#
# Summary: Run an executable with the current Ruby version
#
# Usage: rbenv exec <command> [<args>...]
#
# Runs an executable by first prepending the current Ruby version's
# `bin' directory to PATH.
#
# For example, this invocation:
#
#   RBENV_VERSION=3.1.2 rbenv exec bundle install
#
# roughly translates to:
#
#   PATH="$RBENV_ROOT/versions/3.1.2/bin:$PATH" bundle install
#
# See `rbenv help which' for information about the fallback mechanism.

set -e
[ -n "$RBENV_DEBUG" ] && set -x

# Provide rbenv completions
if [ "$1" = "--complete" ]; then
  exec rbenv-shims --short
fi

RBENV_VERSION="$(rbenv-version-name)"
RBENV_COMMAND="$1"

if [ -z "$RBENV_COMMAND" ]; then
  rbenv-help --usage exec >&2
  exit 1
fi

export RBENV_VERSION
RBENV_COMMAND_PATH="$(rbenv-which "$RBENV_COMMAND")"
RBENV_BIN_PATH="${RBENV_COMMAND_PATH%/*}"

IFS=$'\n' read -d '' -r -a scripts <<<"$(rbenv-hooks exec)" || true
for script in "${scripts[@]}"; do
  # shellcheck disable=SC1090
  source "$script"
done

shift 1
if [ "$RBENV_BIN_PATH" = "${RBENV_ROOT}/versions/${RBENV_VERSION}/bin" ]; then
  export PATH="${RBENV_BIN_PATH}:${PATH}"
fi
exec -a "$RBENV_COMMAND" "$RBENV_COMMAND_PATH" "$@"
